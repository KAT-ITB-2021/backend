generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model DetailMentorings {
  id         Int          @id @default(autoincrement())
  day        Int?
  judul      String?      @db.VarChar(255)
  deskripsi  String?      @db.VarChar(255)
  start      DateTime?    @db.DateTime(0)
  end        DateTime?    @db.DateTime(0)
  createdAt  DateTime     @db.DateTime(0)
  updatedAt  DateTime     @db.DateTime(0)
  Mentorings Mentorings[]
}

model Files {
  id        Int      @id @default(autoincrement())
  materi    Int?
  name      String?  @db.VarChar(255)
  path      String?  @db.VarChar(255)
  createdAt DateTime @db.DateTime(0)
  updatedAt DateTime @db.DateTime(0)
  Materis   Materis? @relation(fields: [materi], references: [id])

  @@index([materi], name: "materi")
}

model JadwalPresensis {
  id              Int               @id @default(autoincrement())
  judul           String?           @db.VarChar(255)
  start           DateTime?         @db.DateTime(0)
  end             DateTime?         @db.DateTime(0)
  createdAt       DateTime          @db.DateTime(0)
  updatedAt       DateTime          @db.DateTime(0)
  PresensiPeserta PresensiPeserta[]
}

model Materis {
  id        Int      @id @default(autoincrement())
  bagian    String?  @db.VarChar(255)
  judul     String?  @db.VarChar(255)
  deskripsi String?  @db.Text
  embed     String?  @db.VarChar(255)
  createdAt DateTime @db.DateTime(0)
  updatedAt DateTime @db.DateTime(0)
  Files     Files[]
}

model Mentorings {
  id               Int               @id @default(autoincrement())
  kelompok         String?           @db.VarChar(255)
  link             String?           @db.VarChar(255)
  detail           Int?
  createdAt        DateTime          @db.DateTime(0)
  updatedAt        DateTime          @db.DateTime(0)
  DetailMentorings DetailMentorings? @relation(fields: [detail], references: [id])

  @@index([detail], name: "detail")
}

model PresensiPeserta {
  id              Int              @id @default(autoincrement())
  hadir           Boolean?
  user            Int?
  jadwal          Int?
  createdAt       DateTime         @db.DateTime(0)
  updatedAt       DateTime         @db.DateTime(0)
  JadwalPresensis JadwalPresensis? @relation(fields: [jadwal], references: [id])
  Users           Users?           @relation(fields: [user], references: [id])

  @@index([jadwal], name: "presensipeserta_ibfk_2")
  @@index([user], name: "user")
}

model SequelizeMeta {
  name String @id @unique @db.VarChar(255)
}

model SubmisiTugas {
  id        Int      @id @default(autoincrement())
  pemilik   Int?
  tugas     Int?
  nama      String?  @db.VarChar(255)
  path      String?  @db.VarChar(255)
  createdAt DateTime @db.DateTime(0)
  updatedAt DateTime @db.DateTime(0)
  Users     Users?   @relation(fields: [pemilik], references: [id])
  Tugas     Tugas?   @relation(fields: [tugas], references: [id])

  @@index([pemilik], name: "pemilik")
  @@index([tugas], name: "tugas")
}

model Tugas {
  id           Int            @id @default(autoincrement())
  bagian       String?        @db.VarChar(255)
  judul        String?        @db.VarChar(255)
  deskripsi    String?        @db.VarChar(255)
  createdAt    DateTime       @db.DateTime(0)
  updatedAt    DateTime       @db.DateTime(0)
  deadline     DateTime?      @db.DateTime(0)
  SubmisiTugas SubmisiTugas[]
}

model Users {
  id              Int               @id @default(autoincrement())
  nama            String?           @db.VarChar(255)
  nim             String?           @db.VarChar(8)
  email           String?           @unique @db.VarChar(255)
  kelompok        Int?
  hashedPassword  String?           @db.VarChar(255)
  salt            String?           @db.VarChar(255)
  role            String?           @db.VarChar(255)
  createdAt       DateTime          @db.DateTime(0)
  updatedAt       DateTime          @db.DateTime(0)
  PresensiPeserta PresensiPeserta[]
  SubmisiTugas    SubmisiTugas[]
}

model webinars {
  id        Int       @id @default(autoincrement())
  ytid      String?   @db.VarChar(255)
  judul     String?   @db.VarChar(255)
  deskripsi String?   @db.VarChar(255)
  start     DateTime? @db.DateTime(0)
  end       DateTime? @db.DateTime(0)
  createdAt DateTime  @db.DateTime(0)
  updatedAt DateTime  @db.DateTime(0)
}
